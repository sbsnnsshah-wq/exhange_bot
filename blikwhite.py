import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, CallbackQueryHandler, Filters, CallbackContext

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_CHAT_ID = int(os.getenv("ADMIN_CHAT_ID"))

COMMISSION = 0.3  # 30%

users = {}
orders = {}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
menu_keyboard = ReplyKeyboardMarkup(
    [["üí∞ –í—ã–ø–ª–∞—Ç–∏—Ç—å –±–∞–ª–∞–Ω—Å", "‚öôÔ∏è –°–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å"], ["üìû –ö–æ–Ω—Ç–∞–∫—Ç"]],
    resize_keyboard=True
)

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ —Å—É–º–º—É –¥–ª—è –æ–±–º–µ–Ω–∞ (–≤ PLN):",
        reply_markup=menu_keyboard
    )

def handle_message(update: Update, context: CallbackContext):
    text = update.message.text.strip()
    chat_id = update.effective_chat.id

    if text == "üí∞ –í—ã–ø–ª–∞—Ç–∏—Ç—å –±–∞–ª–∞–Ω—Å":
        balance = users.get(chat_id, {}).get("balance", 0)
        update.message.reply_text(f"üí∏ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance} PLN\n–û—Ç–ø—Ä–∞–≤—å –∞–¥—Ä–µ—Å LTC –¥–ª—è –≤—ã–≤–æ–¥–∞.")
        return

    if text == "‚öôÔ∏è –°–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å":
        update.message.reply_text("üîÑ –í–≤–µ–¥–∏ –Ω–æ–≤—ã–π LTC-–∞–¥—Ä–µ—Å.")
        return

    if text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç":
        update.message.reply_text("üì¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @your_username")
        return

    try:
        amount = float(text)
        users[chat_id] = {"amount": amount}
        update.message.reply_text("üì≤ –í–≤–µ–¥–∏ –∫–æ–¥ BLIK:")
    except ValueError:
        if "amount" in users.get(chat_id, {}):
            code = text
            amount = users[chat_id]["amount"]
            payout = round(amount * (1 - COMMISSION), 2)

            orders[chat_id] = {"code": code, "amount": amount, "payout": payout}
            users[chat_id]["balance"] = users.get(chat_id, {}).get("balance", 0) + payout

            keyboard = [
                [
                    InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{chat_id}"),
                    InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"decline_{chat_id}")
                ]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            context.bot.send_message(
                chat_id=ADMIN_CHAT_ID,
                text=f"üí≥ –ù–æ–≤—ã–π BLIK-–∫–æ–¥\n–°—É–º–º–∞: {amount} PLN\n–ö–æ–¥: {code}\n"
                     f"üí∞ –í—ã–ø–ª–∞—Ç–∞: {payout} PLN",
                reply_markup=reply_markup
            )
            update.message.reply_text("‚úÖ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.")
        else:
            update.message.reply_text("‚ö†Ô∏è –í–≤–µ–¥–∏ —Å–Ω–∞—á–∞–ª–∞ —Å—É–º–º—É.")

def admin_action(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    data = query.data
    if data.startswith("accept_"):
        uid = int(data.split("_")[1])
        context.bot.send_message(chat_id=uid, text="‚úÖ –ö–æ–¥ –ø—Ä–∏–Ω—è—Ç! –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª—ë–Ω.")
    elif data.startswith("decline_"):
        uid = int(data.split("_")[1])
        context.bot.send_message(chat_id=uid, text="‚ùå –ö–æ–¥ –æ—Ç–∫–ª–æ–Ω—ë–Ω. –û–±—Ä–∞—Ç–∏—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")

def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    dp.add_handler(CallbackQueryHandler(admin_action))

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
